//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace JoseTFG.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_BreathingSoap", Namespace="http://tempuri.org/")]
    public partial class WS_Breathing : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RecuperaPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstaRegistradoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistrarOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Upd_eMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback delUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback listaEnfermedadesOperationCompleted;
        
        private System.Threading.SendOrPostCallback riesgoEnfermedadOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_Breathing() {
            this.Url = "http://150.214.108.138/WS_Breathing/WS_Breathing.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RecuperaPwdCompletedEventHandler RecuperaPwdCompleted;
        
        /// <remarks/>
        public event EstaRegistradoCompletedEventHandler EstaRegistradoCompleted;
        
        /// <remarks/>
        public event RegistrarCompletedEventHandler RegistrarCompleted;
        
        /// <remarks/>
        public event UpdPwdCompletedEventHandler UpdPwdCompleted;
        
        /// <remarks/>
        public event Upd_eMailCompletedEventHandler Upd_eMailCompleted;
        
        /// <remarks/>
        public event delUserCompletedEventHandler delUserCompleted;
        
        /// <remarks/>
        public event listaEnfermedadesCompletedEventHandler listaEnfermedadesCompleted;
        
        /// <remarks/>
        public event riesgoEnfermedadCompletedEventHandler riesgoEnfermedadCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperaPwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RecuperaPwd(string usuario) {
            object[] results = this.Invoke("RecuperaPwd", new object[] {
                        usuario});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RecuperaPwdAsync(string usuario) {
            this.RecuperaPwdAsync(usuario, null);
        }
        
        /// <remarks/>
        public void RecuperaPwdAsync(string usuario, object userState) {
            if ((this.RecuperaPwdOperationCompleted == null)) {
                this.RecuperaPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecuperaPwdOperationCompleted);
            }
            this.InvokeAsync("RecuperaPwd", new object[] {
                        usuario}, this.RecuperaPwdOperationCompleted, userState);
        }
        
        private void OnRecuperaPwdOperationCompleted(object arg) {
            if ((this.RecuperaPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecuperaPwdCompleted(this, new RecuperaPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EstaRegistrado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EstaRegistrado(string usuario, string contra) {
            object[] results = this.Invoke("EstaRegistrado", new object[] {
                        usuario,
                        contra});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EstaRegistradoAsync(string usuario, string contra) {
            this.EstaRegistradoAsync(usuario, contra, null);
        }
        
        /// <remarks/>
        public void EstaRegistradoAsync(string usuario, string contra, object userState) {
            if ((this.EstaRegistradoOperationCompleted == null)) {
                this.EstaRegistradoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstaRegistradoOperationCompleted);
            }
            this.InvokeAsync("EstaRegistrado", new object[] {
                        usuario,
                        contra}, this.EstaRegistradoOperationCompleted, userState);
        }
        
        private void OnEstaRegistradoOperationCompleted(object arg) {
            if ((this.EstaRegistradoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstaRegistradoCompleted(this, new EstaRegistradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Registrar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Registrar(string usuario, string contra, string rolName, string e_mail) {
            object[] results = this.Invoke("Registrar", new object[] {
                        usuario,
                        contra,
                        rolName,
                        e_mail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegistrarAsync(string usuario, string contra, string rolName, string e_mail) {
            this.RegistrarAsync(usuario, contra, rolName, e_mail, null);
        }
        
        /// <remarks/>
        public void RegistrarAsync(string usuario, string contra, string rolName, string e_mail, object userState) {
            if ((this.RegistrarOperationCompleted == null)) {
                this.RegistrarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistrarOperationCompleted);
            }
            this.InvokeAsync("Registrar", new object[] {
                        usuario,
                        contra,
                        rolName,
                        e_mail}, this.RegistrarOperationCompleted, userState);
        }
        
        private void OnRegistrarOperationCompleted(object arg) {
            if ((this.RegistrarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistrarCompleted(this, new RegistrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdPwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdPwd(string usuario, string old_pwd, string new_pwd) {
            object[] results = this.Invoke("UpdPwd", new object[] {
                        usuario,
                        old_pwd,
                        new_pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPwdAsync(string usuario, string old_pwd, string new_pwd) {
            this.UpdPwdAsync(usuario, old_pwd, new_pwd, null);
        }
        
        /// <remarks/>
        public void UpdPwdAsync(string usuario, string old_pwd, string new_pwd, object userState) {
            if ((this.UpdPwdOperationCompleted == null)) {
                this.UpdPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPwdOperationCompleted);
            }
            this.InvokeAsync("UpdPwd", new object[] {
                        usuario,
                        old_pwd,
                        new_pwd}, this.UpdPwdOperationCompleted, userState);
        }
        
        private void OnUpdPwdOperationCompleted(object arg) {
            if ((this.UpdPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPwdCompleted(this, new UpdPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upd_eMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Upd_eMail(string usuario, string contra, string e_mail) {
            object[] results = this.Invoke("Upd_eMail", new object[] {
                        usuario,
                        contra,
                        e_mail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Upd_eMailAsync(string usuario, string contra, string e_mail) {
            this.Upd_eMailAsync(usuario, contra, e_mail, null);
        }
        
        /// <remarks/>
        public void Upd_eMailAsync(string usuario, string contra, string e_mail, object userState) {
            if ((this.Upd_eMailOperationCompleted == null)) {
                this.Upd_eMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpd_eMailOperationCompleted);
            }
            this.InvokeAsync("Upd_eMail", new object[] {
                        usuario,
                        contra,
                        e_mail}, this.Upd_eMailOperationCompleted, userState);
        }
        
        private void OnUpd_eMailOperationCompleted(object arg) {
            if ((this.Upd_eMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Upd_eMailCompleted(this, new Upd_eMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/delUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool delUser(string usuario, string contra) {
            object[] results = this.Invoke("delUser", new object[] {
                        usuario,
                        contra});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void delUserAsync(string usuario, string contra) {
            this.delUserAsync(usuario, contra, null);
        }
        
        /// <remarks/>
        public void delUserAsync(string usuario, string contra, object userState) {
            if ((this.delUserOperationCompleted == null)) {
                this.delUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelUserOperationCompleted);
            }
            this.InvokeAsync("delUser", new object[] {
                        usuario,
                        contra}, this.delUserOperationCompleted, userState);
        }
        
        private void OndelUserOperationCompleted(object arg) {
            if ((this.delUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delUserCompleted(this, new delUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listaEnfermedades", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Enfermedad[] listaEnfermedades() {
            object[] results = this.Invoke("listaEnfermedades", new object[0]);
            return ((Enfermedad[])(results[0]));
        }
        
        /// <remarks/>
        public void listaEnfermedadesAsync() {
            this.listaEnfermedadesAsync(null);
        }
        
        /// <remarks/>
        public void listaEnfermedadesAsync(object userState) {
            if ((this.listaEnfermedadesOperationCompleted == null)) {
                this.listaEnfermedadesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistaEnfermedadesOperationCompleted);
            }
            this.InvokeAsync("listaEnfermedades", new object[0], this.listaEnfermedadesOperationCompleted, userState);
        }
        
        private void OnlistaEnfermedadesOperationCompleted(object arg) {
            if ((this.listaEnfermedadesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listaEnfermedadesCompleted(this, new listaEnfermedadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/riesgoEnfermedad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string riesgoEnfermedad(string enfermedad, int[] respuestas) {
            object[] results = this.Invoke("riesgoEnfermedad", new object[] {
                        enfermedad,
                        respuestas});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void riesgoEnfermedadAsync(string enfermedad, int[] respuestas) {
            this.riesgoEnfermedadAsync(enfermedad, respuestas, null);
        }
        
        /// <remarks/>
        public void riesgoEnfermedadAsync(string enfermedad, int[] respuestas, object userState) {
            if ((this.riesgoEnfermedadOperationCompleted == null)) {
                this.riesgoEnfermedadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnriesgoEnfermedadOperationCompleted);
            }
            this.InvokeAsync("riesgoEnfermedad", new object[] {
                        enfermedad,
                        respuestas}, this.riesgoEnfermedadOperationCompleted, userState);
        }
        
        private void OnriesgoEnfermedadOperationCompleted(object arg) {
            if ((this.riesgoEnfermedadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.riesgoEnfermedadCompleted(this, new riesgoEnfermedadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Enfermedad {
        
        private int idField;
        
        private string nombreField;
        
        private string desField;
        
        private string[] sintomasField;
        
        private string[] sintomasField1;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
        
        /// <remarks/>
        public string des {
            get {
                return this.desField;
            }
            set {
                this.desField = value;
            }
        }
        
        /// <remarks/>
        public string[] sintomas {
            get {
                return this.sintomasField;
            }
            set {
                this.sintomasField = value;
            }
        }
        
        /// <remarks/>
        public string[] Sintomas {
            get {
                return this.sintomasField1;
            }
            set {
                this.sintomasField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RecuperaPwdCompletedEventHandler(object sender, RecuperaPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecuperaPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecuperaPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EstaRegistradoCompletedEventHandler(object sender, EstaRegistradoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstaRegistradoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstaRegistradoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegistrarCompletedEventHandler(object sender, RegistrarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistrarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistrarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdPwdCompletedEventHandler(object sender, UpdPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Upd_eMailCompletedEventHandler(object sender, Upd_eMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Upd_eMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Upd_eMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void delUserCompletedEventHandler(object sender, delUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal delUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void listaEnfermedadesCompletedEventHandler(object sender, listaEnfermedadesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listaEnfermedadesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listaEnfermedadesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Enfermedad[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Enfermedad[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void riesgoEnfermedadCompletedEventHandler(object sender, riesgoEnfermedadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class riesgoEnfermedadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal riesgoEnfermedadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591